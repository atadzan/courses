package main

import "fmt"

func main() {
	//printNumSquares()
	//printNumRangeSum()
	//printEightDivideNum()
	//findMaxNumDuplicate()
	//printNumsDivide()
	readIntFromConsole()
}

/*
	Задание 1
	Напишите программу, которая выводит квадраты натуральных чисел от 1 до 10. Квадрат каждого числа должен выводится в новой строке.
*/

func printNumSquares() {
	for i := 1; i <= 10; i++ {
		fmt.Println(i * i)
	}
}

/*
	Задание 2
	Требуется написать программу, при выполнении которой с клавиатуры считываются два натуральных
	числа A и B (каждое не более 100, A < B). Вывести сумму всех чисел от A до B  включительно.

	Sample Input: 1 5

	Sample Output: 15
*/

func printNumRangeSum() {
	var a, b int
	fmt.Scan(&a, &b)
	var sum int
	for i := a; i <= b; i++ {
		sum += i
	}
	fmt.Println(sum)

	// Second solution
	//var a, b int
	//fmt.Scan(&a, &b)
	//fmt.Println((b - a + 1) * (a + b) / 2)
}

/*
	Задание 3
	Напишите программу, которая в последовательности чисел находит сумму двузначных чисел, кратных 8.
	Программа в первой строке получает на вход число n - количество чисел в последовательности, во второй строке -- n чисел,
	входящих в данную последовательность.

	Sample Input: 5
				  38 24 800 8 16

	Sample Output: 40
*/

func printEightDivideNum() {
	var a, l, sum int
	fmt.Scan(&l)
	for i := 1; i <= l; i++ {
		fmt.Scan(&a)
		if a%8 == 0 && a > 9 && a < 100 {
			sum += a
		}
	}
	fmt.Println(sum)
}

/*
	Задание 4
	Последовательность состоит из натуральных чисел и завершается числом 0. Определите количество элементов этой
    последовательности, которые равны ее наибольшему элементу.

	Формат входных данных
	Вводится непустая последовательность натуральных чисел, оканчивающаяся числом 0 (само число 0 в последовательность
	не входит, а служит как признак ее окончания).

	Формат выходных данных
	Выведите ответ на задачу.

	Sample Input: 1
				  3
                  3
                  1
                  0
	Sample Output:2
*/

func findMaxNumDuplicate() {
	var b, x int
	a := 1
	for i := 0; a != 0; i++ {
		fmt.Scan(&a)
		if a > x {
			x = a
			b = 1
		} else if a == x {
			b++
		}

	}
	fmt.Println(b)

	// Better solution
	//var a,s,p int
	//for fmt.Scan(&a); a!=0; fmt.Scan(&a){
	//	if a> s {s = a; p = 0}
	//	if a==s {p++}
	//}
	//fmt.Println(p)
}

/*
	Задание 5
	Найдите первое число от 1 до n включительно, кратное c, но НЕ кратное d.

	Входные данные
	Вводится 3 натуральных числа n, c, d, каждое из которых не превышает 10000.

	Выходные данные
	Вывести первое число от 1 до n включительно, кратное c, но НЕ кратное d.
	Если такого числа нет - выводить ничего не нужно.

	Sample Input: 20
				   3
				   5
	Sample Output: 3
*/

func printNumsDivide() {
	var n, c, d int
	fmt.Scan(&n, &c, &d)
	for i := 1; i <= n; i++ {
		if i%c == 0 && i%d != 0 {
			fmt.Println(i)
			break
		}
	}
}

/*
	Задание 5
	Напишите программу, которая считывает целые числа с консоли по одному числу в строке.
	Для каждого введённого числа проверить:
    										если число меньше 10, то пропускаем это число;
    										если число больше 100, то прекращаем считывать числа;
    										в остальных случаях вывести это число обратно на консоль в отдельной строке.

	Sample Input: 30
				  11
  				  7
				  101

	Sample Output: 30
				   11
*/

func readIntFromConsole() {
	a := 101
	b := []int{}
	for {
		fmt.Scan(&a)
		if a < 10 {
			continue
		} else if a > 100 {
			break
		}
		b = append(b, a)
	}
	for _, v := range b {
		fmt.Println(v)
	}

	// solution 2
	//var n int
	//for fmt.Scan(&n); n <= 100 ; fmt.Scan(&n)   {
	//	if n >= 10  {
	//		fmt.Println(n)
	//	}
	//}
}

/*
	Задание 6
	Вклад в банке составляет x рублей. Ежегодно он увеличивается на p процентов, после чего дробная часть копеек отбрасывается.
	Каждый год сумма вклада становится больше. Определите, через сколько лет вклад составит не менее y рублей.

	Входные данные
	Программа получает на вход три натуральных числа: x, p, y.

	Выходные данные
	Программа должна вывести одно целое число.

	Sample Input: 100
				  10
                  200

	Sample Output: 8
*/

func calculateXMoney() {
	// TODO Need to solve
}

/*
	Задание 7
	Даны два числа. Определить цифры, входящие в запись как первого, так и второго числа.

	Входные данные
	Программа получает на вход два числа. Гарантируется, что цифры в числах не повторяются. Числа в пределах от 0 до 10000.

	Выходные данные
	Программа должна вывести цифры, которые имеются в обоих числах, через пробел. Цифры выводятся в порядке их нахождения в первом числе.
	Внимание! Если вам сложно решить эту задачу, пропустите и изучайте материал дальше, затем вернетесь к этой задаче позже.

	Sample Input: 564 8954

	Sample Output: 5 4
*/

func printRepeatNum() {
	// TODO Need to solve
}
